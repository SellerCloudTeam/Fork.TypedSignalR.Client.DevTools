(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[97],{6802:function(t,e,o){"use strict";o.d(e,{s:function(){return B}});let n=[0,2e3,1e4,3e4,null];class r{constructor(t){this._retryDelays=void 0!==t?[...t,null]:n}nextRetryDelayInMilliseconds(t){return this._retryDelays[t.previousRetryCount]}}class i extends Error{constructor(t,e){let o=new.target.prototype;super(`${t}: Status code '${e}'`),this.statusCode=e,this.__proto__=o}}class s extends Error{constructor(t="A timeout occurred."){let e=new.target.prototype;super(t),this.__proto__=e}}class a extends Error{constructor(t="An abort occurred."){let e=new.target.prototype;super(t),this.__proto__=e}}class c extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.transport=e,this.errorType="UnsupportedTransportError",this.__proto__=o}}class l extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.transport=e,this.errorType="DisabledTransportError",this.__proto__=o}}class h extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.transport=e,this.errorType="FailedToStartTransportError",this.__proto__=o}}class u extends Error{constructor(t){let e=new.target.prototype;super(t),this.errorType="FailedToNegotiateWithServerError",this.__proto__=e}}class g extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.innerErrors=e,this.__proto__=o}}class d{constructor(t,e,o){this.statusCode=t,this.statusText=e,this.content=o}}class p{get(t,e){return this.send({...e,method:"GET",url:t})}post(t,e){return this.send({...e,method:"POST",url:t})}delete(t,e){return this.send({...e,method:"DELETE",url:t})}getCookieString(t){return""}}var _,f,m,b,w=o(239),y=o(7968);class v extends p{constructor(t){if(super(),this._logger=t,"undefined"==typeof fetch){let e=require;this._jar=new(e("tough-cookie")).CookieJar,this._fetchType=e("node-fetch"),this._fetchType=e("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind((0,y.E9)());if("undefined"==typeof AbortController){let o=require;this._abortControllerType=o("abort-controller")}else this._abortControllerType=AbortController}async send(t){if(t.abortSignal&&t.abortSignal.aborted)throw new a;if(!t.method)throw Error("No method defined.");if(!t.url)throw Error("No url defined.");let e=new this._abortControllerType,o;t.abortSignal&&(t.abortSignal.onabort=()=>{e.abort(),o=new a});let n=null;if(t.timeout){let r=t.timeout;n=setTimeout(()=>{e.abort(),this._logger.log(w.i.Warning,"Timeout from HTTP request."),o=new s},r)}let c;try{c=await this._fetchType(t.url,{body:t.content,cache:"no-cache",credentials:!0===t.withCredentials?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...t.headers},method:t.method,mode:"cors",redirect:"follow",signal:e.signal})}catch(l){if(o)throw o;throw this._logger.log(w.i.Warning,`Error from HTTP request. ${l}.`),l}finally{n&&clearTimeout(n),t.abortSignal&&(t.abortSignal.onabort=null)}if(!c.ok){let h=await S(c,"text");throw new i(h||c.statusText,c.status)}let u=S(c,t.responseType),g=await u;return new d(c.status,c.statusText,g)}getCookieString(t){let e="";return y.t4.isNode&&this._jar&&this._jar.getCookies(t,(t,o)=>e=o.join("; ")),e}}function S(t,e){let o;switch(e){case"arraybuffer":o=t.arrayBuffer();break;case"text":default:o=t.text();break;case"blob":case"document":case"json":throw Error(`${e} is not supported.`)}return o}class C extends p{constructor(t){super(),this._logger=t}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new a):t.method?t.url?new Promise((e,o)=>{let n=new XMLHttpRequest;n.open(t.method,t.url,!0),n.withCredentials=void 0===t.withCredentials||t.withCredentials,n.setRequestHeader("X-Requested-With","XMLHttpRequest"),n.setRequestHeader("Content-Type","text/plain;charset=UTF-8");let r=t.headers;r&&Object.keys(r).forEach(t=>{n.setRequestHeader(t,r[t])}),t.responseType&&(n.responseType=t.responseType),t.abortSignal&&(t.abortSignal.onabort=()=>{n.abort(),o(new a)}),t.timeout&&(n.timeout=t.timeout),n.onload=()=>{t.abortSignal&&(t.abortSignal.onabort=null),n.status>=200&&n.status<300?e(new d(n.status,n.statusText,n.response||n.responseText)):o(new i(n.response||n.responseText||n.statusText,n.status))},n.onerror=()=>{this._logger.log(w.i.Warning,`Error from HTTP request. ${n.status}: ${n.statusText}.`),o(new i(n.statusText,n.status))},n.ontimeout=()=>{this._logger.log(w.i.Warning,"Timeout from HTTP request."),o(new s)},n.send(t.content||"")}):Promise.reject(Error("No url defined.")):Promise.reject(Error("No method defined."))}}class E extends p{constructor(t){if(super(),"undefined"!=typeof fetch||y.t4.isNode)this._httpClient=new v(t);else if("undefined"!=typeof XMLHttpRequest)this._httpClient=new C(t);else throw Error("No usable HttpClient found.")}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new a):t.method?t.url?this._httpClient.send(t):Promise.reject(Error("No url defined.")):Promise.reject(Error("No method defined."))}getCookieString(t){return this._httpClient.getCookieString(t)}}class k{}k.Authorization="Authorization",k.Cookie="Cookie",(W=_||(_={}))[W.None=0]="None",W[W.WebSockets=1]="WebSockets",W[W.ServerSentEvents=2]="ServerSentEvents",W[W.LongPolling=4]="LongPolling",(A=f||(f={}))[A.Text=1]="Text",A[A.Binary=2]="Binary";class T{constructor(){this._isAborted=!1,this.onabort=null}abort(){!this._isAborted&&(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class I{constructor(t,e,o,n){this._httpClient=t,this._accessTokenFactory=e,this._logger=o,this._pollAbort=new T,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(t,e){if(y.j7.isRequired(t,"url"),y.j7.isRequired(e,"transferFormat"),y.j7.isIn(e,f,"transferFormat"),this._url=t,this._logger.log(w.i.Trace,"(LongPolling transport) Connecting."),e===f.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof new XMLHttpRequest().responseType)throw Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");let[o,n]=(0,y.hS)(),r={[o]:n,...this._options.headers},s={abortSignal:this._pollAbort.signal,headers:r,timeout:1e5,withCredentials:this._options.withCredentials};e===f.Binary&&(s.responseType="arraybuffer");let a=await this._getAccessToken();this._updateHeaderToken(s,a);let c=`${t}&_=${Date.now()}`;this._logger.log(w.i.Trace,`(LongPolling transport) polling: ${c}.`);let l=await this._httpClient.get(c,s);200!==l.statusCode?(this._logger.log(w.i.Error,`(LongPolling transport) Unexpected response code: ${l.statusCode}.`),this._closeError=new i(l.statusText||"",l.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,s)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(t,e){if(t.headers||(t.headers={}),e){t.headers[k.Authorization]=`Bearer ${e}`;return}t.headers[k.Authorization]&&delete t.headers[k.Authorization]}async _poll(t,e){try{for(;this._running;){let o=await this._getAccessToken();this._updateHeaderToken(e,o);try{let n=`${t}&_=${Date.now()}`;this._logger.log(w.i.Trace,`(LongPolling transport) polling: ${n}.`);let r=await this._httpClient.get(n,e);204===r.statusCode?(this._logger.log(w.i.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==r.statusCode?(this._logger.log(w.i.Error,`(LongPolling transport) Unexpected response code: ${r.statusCode}.`),this._closeError=new i(r.statusText||"",r.statusCode),this._running=!1):r.content?(this._logger.log(w.i.Trace,`(LongPolling transport) data received. ${(0,y.o4)(r.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(r.content)):this._logger.log(w.i.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(a){this._running?a instanceof s?this._logger.log(w.i.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=a,this._running=!1):this._logger.log(w.i.Trace,`(LongPolling transport) Poll errored after shutdown: ${a.message}`)}}}finally{this._logger.log(w.i.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(t){return this._running?(0,y.bG)(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,t,this._options):Promise.reject(Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(w.i.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(w.i.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);let t={},[e,o]=(0,y.hS)();t[e]=o;let n={headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},r=await this._getAccessToken();this._updateHeaderToken(n,r),await this._httpClient.delete(this._url,n),this._logger.log(w.i.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(w.i.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let t="(LongPolling transport) Firing onclose event.";this._closeError&&(t+=" Error: "+this._closeError),this._logger.log(w.i.Trace,t),this.onclose(this._closeError)}}}class P{constructor(t,e,o,n){this._httpClient=t,this._accessTokenFactory=e,this._logger=o,this._options=n,this.onreceive=null,this.onclose=null}async connect(t,e){if(y.j7.isRequired(t,"url"),y.j7.isRequired(e,"transferFormat"),y.j7.isIn(e,f,"transferFormat"),this._logger.log(w.i.Trace,"(SSE transport) Connecting."),this._url=t,this._accessTokenFactory){let o=await this._accessTokenFactory();o&&(t+=(0>t.indexOf("?")?"?":"&")+`access_token=${encodeURIComponent(o)}`)}return new Promise((o,n)=>{let r=!1;if(e!==f.Text){n(Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let i;if(y.t4.isBrowser||y.t4.isWebWorker)i=new this._options.EventSource(t,{withCredentials:this._options.withCredentials});else{let s=this._httpClient.getCookieString(t),a={};a.Cookie=s;let[c,l]=(0,y.hS)();a[c]=l,i=new this._options.EventSource(t,{withCredentials:this._options.withCredentials,headers:{...a,...this._options.headers}})}try{i.onmessage=t=>{if(this.onreceive)try{this._logger.log(w.i.Trace,`(SSE transport) data received. ${(0,y.o4)(t.data,this._options.logMessageContent)}.`),this.onreceive(t.data)}catch(e){this._close(e);return}},i.onerror=t=>{r?this._close():n(Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},i.onopen=()=>{this._logger.log(w.i.Information,`SSE connected to ${this._url}`),this._eventSource=i,r=!0,o()}}catch(h){n(h);return}})}async send(t){return this._eventSource?(0,y.bG)(this._logger,"SSE",this._httpClient,this._url,this._accessTokenFactory,t,this._options):Promise.reject(Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(t){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(t))}}class ${constructor(t,e,o,n,r,i){this._logger=o,this._accessTokenFactory=e,this._logMessageContent=n,this._webSocketConstructor=r,this._httpClient=t,this.onreceive=null,this.onclose=null,this._headers=i}async connect(t,e){if(y.j7.isRequired(t,"url"),y.j7.isRequired(e,"transferFormat"),y.j7.isIn(e,f,"transferFormat"),this._logger.log(w.i.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory){let o=await this._accessTokenFactory();o&&(t+=(0>t.indexOf("?")?"?":"&")+`access_token=${encodeURIComponent(o)}`)}return new Promise((o,n)=>{t=t.replace(/^http/,"ws");let r,i=this._httpClient.getCookieString(t),s=!1;if(y.t4.isNode){let a={},[c,l]=(0,y.hS)();a[c]=l,i&&(a[k.Cookie]=`${i}`),r=new this._webSocketConstructor(t,void 0,{headers:{...a,...this._headers}})}r||(r=new this._webSocketConstructor(t)),e===f.Binary&&(r.binaryType="arraybuffer"),r.onopen=e=>{this._logger.log(w.i.Information,`WebSocket connected to ${t}.`),this._webSocket=r,s=!0,o()},r.onerror=t=>{let e=null;e="undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:"There was an error with the transport",this._logger.log(w.i.Information,`(WebSockets transport) ${e}.`)},r.onmessage=t=>{if(this._logger.log(w.i.Trace,`(WebSockets transport) data received. ${(0,y.o4)(t.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(t.data)}catch(e){this._close(e);return}},r.onclose=t=>{if(s)this._close(t);else{let e=null;n(Error("undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled."))}}})}send(t){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(w.i.Trace,`(WebSockets transport) sending data. ${(0,y.o4)(t,this._logMessageContent)}.`),this._webSocket.send(t),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(t){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(w.i.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(t)&&(!1===t.wasClean||1e3!==t.code)?this.onclose(Error(`WebSocket closed with status code: ${t.code} (${t.reason||"no reason given"}).`)):t instanceof Error?this.onclose(t):this.onclose())}_isCloseEvent(t){return t&&"boolean"==typeof t.wasClean&&"number"==typeof t.code}}class D{constructor(t,e={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,y.j7.isRequired(t,"url"),this._logger=(0,y.hu)(e.logger),this.baseUrl=this._resolveUrl(t),(e=e||{}).logMessageContent=void 0!==e.logMessageContent&&e.logMessageContent,"boolean"==typeof e.withCredentials||void 0===e.withCredentials)e.withCredentials=void 0===e.withCredentials||e.withCredentials;else throw Error("withCredentials option was not a 'boolean' or 'undefined' value");e.timeout=void 0===e.timeout?1e5:e.timeout;let o=null,n=null;if(y.t4.isNode){let r=require;o=r("ws"),n=r("eventsource")}y.t4.isNode||"undefined"==typeof WebSocket||e.WebSocket?y.t4.isNode&&!e.WebSocket&&o&&(e.WebSocket=o):e.WebSocket=WebSocket,y.t4.isNode||"undefined"==typeof EventSource||e.EventSource?y.t4.isNode&&!e.EventSource&&void 0!==n&&(e.EventSource=n):e.EventSource=EventSource,this._httpClient=e.httpClient||new E(this._logger),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=e,this.onreceive=null,this.onclose=null}async start(t){if(t=t||f.Binary,y.j7.isIn(t,f,"transferFormat"),this._logger.log(w.i.Debug,`Starting connection with transfer format '${f[t]}'.`),"Disconnected"!==this._connectionState)return Promise.reject(Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(t),await this._startInternalPromise,"Disconnecting"===this._connectionState){let e="Failed to start the HttpConnection before stop() was called.";return this._logger.log(w.i.Error,e),await this._stopPromise,Promise.reject(Error(e))}if("Connected"!==this._connectionState){let o="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(w.i.Error,o),Promise.reject(Error(o))}this._connectionStarted=!0}send(t){return"Connected"!==this._connectionState?Promise.reject(Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new R(this.transport)),this._sendQueue.send(t))}async stop(t){return"Disconnected"===this._connectionState?(this._logger.log(w.i.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this._connectionState?(this._logger.log(w.i.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):void(this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(t),await this._stopPromise)}async _stopInternal(t){this._stopError=t;try{await this._startInternalPromise}catch(e){}if(this.transport){try{await this.transport.stop()}catch(o){this._logger.log(w.i.Error,`HttpConnection.transport.stop() threw error '${o}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(w.i.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(t){let e=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory;try{if(this._options.skipNegotiation){if(this._options.transport===_.WebSockets)this.transport=this._constructTransport(_.WebSockets),await this._startTransport(e,t);else throw Error("Negotiation can only be skipped when using the WebSocket transport directly.")}else{let o=null,n=0;do{if(o=await this._getNegotiationResponse(e),"Disconnecting"===this._connectionState||"Disconnected"===this._connectionState)throw Error("The connection was stopped during negotiation.");if(o.error)throw Error(o.error);if(o.ProtocolVersion)throw Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(e=o.url),o.accessToken){let r=o.accessToken;this._accessTokenFactory=()=>r}n++}while(o.url&&n<100);if(100===n&&o.url)throw Error("Negotiate redirection limit exceeded.");await this._createTransport(e,this._options.transport,o,t)}this.transport instanceof I&&(this.features.inherentKeepAlive=!0),"Connecting"===this._connectionState&&(this._logger.log(w.i.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(i){return this._logger.log(w.i.Error,"Failed to start the connection: "+i),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(i)}}async _getNegotiationResponse(t){let e={};if(this._accessTokenFactory){let o=await this._accessTokenFactory();o&&(e[k.Authorization]=`Bearer ${o}`)}let[n,r]=(0,y.hS)();e[n]=r;let s=this._resolveNegotiateUrl(t);this._logger.log(w.i.Debug,`Sending negotiation request: ${s}.`);try{let a=await this._httpClient.post(s,{content:"",headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(200!==a.statusCode)return Promise.reject(Error(`Unexpected status code returned from negotiate '${a.statusCode}'`));let c=JSON.parse(a.content);return(!c.negotiateVersion||c.negotiateVersion<1)&&(c.connectionToken=c.connectionId),c}catch(h){let l="Failed to complete negotiation with the server: "+h;return h instanceof i&&404===h.statusCode&&(l+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(w.i.Error,l),Promise.reject(new u(l))}}_createConnectUrl(t,e){return e?t+(-1===t.indexOf("?")?"?":"&")+`id=${e}`:t}async _createTransport(t,e,o,n){let r=this._createConnectUrl(t,o.connectionToken);if(this._isITransport(e)){this._logger.log(w.i.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=e,await this._startTransport(r,n),this.connectionId=o.connectionId;return}let i=[],s=o.availableTransports||[],a=o;for(let c of s){let l=this._resolveTransportOrError(c,e,n);if(l instanceof Error)i.push(`${c.transport} failed:`),i.push(l);else if(this._isITransport(l)){if(this.transport=l,!a){try{a=await this._getNegotiationResponse(t)}catch(u){return Promise.reject(u)}r=this._createConnectUrl(t,a.connectionToken)}try{await this._startTransport(r,n),this.connectionId=a.connectionId;return}catch(p){if(this._logger.log(w.i.Error,`Failed to start the transport '${c.transport}': ${p}`),a=void 0,i.push(new h(`${c.transport} failed: ${p}`,_[c.transport])),"Connecting"!==this._connectionState){let d="Failed to select transport before stop() was called.";return this._logger.log(w.i.Debug,d),Promise.reject(Error(d))}}}}return i.length>0?Promise.reject(new g(`Unable to connect to the server with any of the available transports. ${i.join(" ")}`,i)):Promise.reject(Error("None of the transports supported by the client are supported by the server."))}_constructTransport(t){switch(t){case _.WebSockets:if(!this._options.WebSocket)throw Error("'WebSocket' is not supported in your environment.");return new $(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case _.ServerSentEvents:if(!this._options.EventSource)throw Error("'EventSource' is not supported in your environment.");return new P(this._httpClient,this._accessTokenFactory,this._logger,this._options);case _.LongPolling:return new I(this._httpClient,this._accessTokenFactory,this._logger,this._options);default:throw Error(`Unknown transport: ${t}.`)}}_startTransport(t,e){return this.transport.onreceive=this.onreceive,this.transport.onclose=t=>this._stopConnection(t),this.transport.connect(t,e)}_resolveTransportOrError(t,e,o){var n,r;let i=_[t.transport];if(null==i)return this._logger.log(w.i.Debug,`Skipping transport '${t.transport}' because it is not supported by this client.`),Error(`Skipping transport '${t.transport}' because it is not supported by this client.`);if(n=e,r=i,n&&(r&n)==0)return this._logger.log(w.i.Debug,`Skipping transport '${_[i]}' because it was disabled by the client.`),new l(`'${_[i]}' is disabled by the client.`,i);{let s=t.transferFormats.map(t=>f[t]);if(!(s.indexOf(o)>=0))return this._logger.log(w.i.Debug,`Skipping transport '${_[i]}' because it does not support the requested transfer format '${f[o]}'.`),Error(`'${_[i]}' does not support ${f[o]}.`);if(i===_.WebSockets&&!this._options.WebSocket||i===_.ServerSentEvents&&!this._options.EventSource)return this._logger.log(w.i.Debug,`Skipping transport '${_[i]}' because it is not supported in your environment.'`),new c(`'${_[i]}' is not supported in your environment.`,i);this._logger.log(w.i.Debug,`Selecting transport '${_[i]}'.`);try{return this._constructTransport(i)}catch(a){return a}}}_isITransport(t){return t&&"object"==typeof t&&"connect"in t}_stopConnection(t){if(this._logger.log(w.i.Debug,`HttpConnection.stopConnection(${t}) called while in state ${this._connectionState}.`),this.transport=void 0,t=this._stopError||t,this._stopError=void 0,"Disconnected"===this._connectionState){this._logger.log(w.i.Debug,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is already in the disconnected state.`);return}if("Connecting"===this._connectionState)throw this._logger.log(w.i.Warning,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is still in the connecting state.`),Error(`HttpConnection.stopConnection(${t}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),t?this._logger.log(w.i.Error,`Connection disconnected with error '${t}'.`):this._logger.log(w.i.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(w.i.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(t)}catch(e){this._logger.log(w.i.Error,`HttpConnection.onclose(${t}) threw error '${e}'.`)}}}_resolveUrl(t){if(0===t.lastIndexOf("https://",0)||0===t.lastIndexOf("http://",0))return t;if(!y.t4.isBrowser)throw Error(`Cannot resolve '${t}'.`);let e=window.document.createElement("a");return e.href=t,this._logger.log(w.i.Information,`Normalizing '${t}' to '${e.href}'.`),e.href}_resolveNegotiateUrl(t){let e=t.indexOf("?"),o=t.substring(0,-1===e?t.length:e);return"/"!==o[o.length-1]&&(o+="/"),o+="negotiate",-1===(o+=-1===e?"":t.substring(e)).indexOf("negotiateVersion")&&(o+=-1===e?"?":"&",o+="negotiateVersion="+this._negotiateVersion),o}}class R{constructor(t){this._transport=t,this._buffer=[],this._executing=!0,this._sendBufferedData=new x,this._transportResult=new x,this._sendLoopPromise=this._sendLoop()}send(t){return this._bufferData(t),this._transportResult||(this._transportResult=new x),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(t){if(this._buffer.length&&typeof this._buffer[0]!=typeof t)throw Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof t}`);this._buffer.push(t),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new x;let t=this._transportResult;this._transportResult=void 0;let e="string"==typeof this._buffer[0]?this._buffer.join(""):R._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(e),t.resolve()}catch(o){t.reject(o)}}}static _concatBuffers(t){let e=t.map(t=>t.byteLength).reduce((t,e)=>t+e),o=new Uint8Array(e),n=0;for(let r of t)o.set(new Uint8Array(r),n),n+=r.byteLength;return o.buffer}}class x{constructor(){this.promise=new Promise((t,e)=>([this._resolver,this._rejecter]=[t,e]))}resolve(){this._resolver()}reject(t){this._rejecter(t)}}class H{static write(t){return`${t}${H.RecordSeparator}`}static parse(t){if(t[t.length-1]!==H.RecordSeparator)throw Error("Message is incomplete.");let e=t.split(H.RecordSeparator);return e.pop(),e}}H.RecordSeparatorCode=30,H.RecordSeparator=String.fromCharCode(H.RecordSeparatorCode);class j{writeHandshakeRequest(t){return H.write(JSON.stringify(t))}parseHandshakeResponse(t){let e,o;if((0,y.eP)(t)){let n=new Uint8Array(t),r=n.indexOf(H.RecordSeparatorCode);if(-1===r)throw Error("Message is incomplete.");let i=r+1;e=String.fromCharCode.apply(null,Array.prototype.slice.call(n.slice(0,i))),o=n.byteLength>i?n.slice(i).buffer:null}else{let s=t.indexOf(H.RecordSeparator);if(-1===s)throw Error("Message is incomplete.");let a=s+1;e=t.substring(0,a),o=t.length>a?t.substring(a):null}let c=H.parse(e),l=JSON.parse(c[0]);if(l.type)throw Error("Expected a handshake response from the server.");return[o,l]}}(N=m||(m={}))[N.Invocation=1]="Invocation",N[N.StreamItem=2]="StreamItem",N[N.Completion=3]="Completion",N[N.StreamInvocation=4]="StreamInvocation",N[N.CancelInvocation=5]="CancelInvocation",N[N.Ping=6]="Ping",N[N.Close=7]="Close";var W,A,N,L,M=o(5403);(L=b||(b={})).Disconnected="Disconnected",L.Connecting="Connecting",L.Connected="Connected",L.Disconnecting="Disconnecting",L.Reconnecting="Reconnecting";class q{constructor(t,e,o,n){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(w.i.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},y.j7.isRequired(t,"connection"),y.j7.isRequired(e,"logger"),y.j7.isRequired(o,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this._logger=e,this._protocol=o,this.connection=t,this._reconnectPolicy=n,this._handshakeProtocol=new j,this.connection.onreceive=t=>this._processIncomingData(t),this.connection.onclose=t=>this._connectionClosed(t),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=b.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:m.Ping})}static create(t,e,o,n){return new q(t,e,o,n)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(t){if(this._connectionState!==b.Disconnected&&this._connectionState!==b.Reconnecting)throw Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!t)throw Error("The HubConnection url must be a valid url.");this.connection.baseUrl=t}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==b.Disconnected)return Promise.reject(Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=b.Connecting,this._logger.log(w.i.Debug,"Starting HubConnection.");try{await this._startInternal(),y.t4.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=b.Connected,this._connectionStarted=!0,this._logger.log(w.i.Debug,"HubConnection connected successfully.")}catch(t){return this._connectionState=b.Disconnected,this._logger.log(w.i.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;let t=new Promise((t,e)=>{this._handshakeResolver=t,this._handshakeRejecter=e});await this.connection.start(this._protocol.transferFormat);try{let e={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(w.i.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(e)),this._logger.log(w.i.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await t,this._stopDuringStartError)throw this._stopDuringStartError}catch(o){throw this._logger.log(w.i.Debug,`Hub handshake failed with error '${o}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(o),o}}async stop(){let t=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await t}catch(e){}}_stopInternal(t){return this._connectionState===b.Disconnected?(this._logger.log(w.i.Debug,`Call to HubConnection.stop(${t}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===b.Disconnecting?(this._logger.log(w.i.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=b.Disconnecting,this._logger.log(w.i.Debug,"Stopping HubConnection."),this._reconnectDelayHandle)?(this._logger.log(w.i.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=t||Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(t))}stream(t,...e){let[o,n]=this._replaceStreamingParams(e),r=this._createStreamInvocation(t,e,n),i,s=new M.x;return s.cancelCallback=()=>{let t=this._createCancelInvocation(r.invocationId);return delete this._callbacks[r.invocationId],i.then(()=>this._sendWithProtocol(t))},this._callbacks[r.invocationId]=(t,e)=>{if(e){s.error(e);return}t&&(t.type===m.Completion?t.error?s.error(Error(t.error)):s.complete():s.next(t.item))},i=this._sendWithProtocol(r).catch(t=>{s.error(t),delete this._callbacks[r.invocationId]}),this._launchStreams(o,i),s}_sendMessage(t){return this._resetKeepAliveInterval(),this.connection.send(t)}_sendWithProtocol(t){return this._sendMessage(this._protocol.writeMessage(t))}send(t,...e){let[o,n]=this._replaceStreamingParams(e),r=this._sendWithProtocol(this._createInvocation(t,e,!0,n));return this._launchStreams(o,r),r}invoke(t,...e){let[o,n]=this._replaceStreamingParams(e),r=this._createInvocation(t,e,!1,n),i=new Promise((t,e)=>{this._callbacks[r.invocationId]=(o,n)=>{if(n){e(n);return}o&&(o.type===m.Completion?o.error?e(Error(o.error)):t(o.result):e(Error(`Unexpected message type: ${o.type}`)))};let n=this._sendWithProtocol(r).catch(t=>{e(t),delete this._callbacks[r.invocationId]});this._launchStreams(o,n)});return i}on(t,e){if(t&&e)t=t.toLowerCase(),this._methods[t]||(this._methods[t]=[]),-1===this._methods[t].indexOf(e)&&this._methods[t].push(e)}off(t,e){if(!t)return;t=t.toLowerCase();let o=this._methods[t];if(o){if(e){let n=o.indexOf(e);-1!==n&&(o.splice(n,1),0===o.length&&delete this._methods[t])}else delete this._methods[t]}}onclose(t){t&&this._closedCallbacks.push(t)}onreconnecting(t){t&&this._reconnectingCallbacks.push(t)}onreconnected(t){t&&this._reconnectedCallbacks.push(t)}_processIncomingData(t){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(t=this._processHandshakeResponse(t),this._receivedHandshakeResponse=!0),t){let e=this._protocol.parseMessages(t,this._logger);for(let o of e)switch(o.type){case m.Invocation:this._invokeClientMethod(o);break;case m.StreamItem:case m.Completion:{let n=this._callbacks[o.invocationId];if(n){o.type===m.Completion&&delete this._callbacks[o.invocationId];try{n(o)}catch(r){this._logger.log(w.i.Error,`Stream callback threw error: ${(0,y.HH)(r)}`)}}break}case m.Ping:break;case m.Close:{this._logger.log(w.i.Information,"Close message received from server.");let i=o.error?Error("Server returned an error on close: "+o.error):void 0;!0===o.allowReconnect?this.connection.stop(i):this._stopPromise=this._stopInternal(i);break}default:this._logger.log(w.i.Warning,`Invalid message type: ${o.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(t){let e,o;try{[o,e]=this._handshakeProtocol.parseHandshakeResponse(t)}catch(i){let n="Error parsing handshake response: "+i;this._logger.log(w.i.Error,n);let r=Error(n);throw this._handshakeRejecter(r),r}if(e.error){let s="Server returned handshake error: "+e.error;this._logger.log(w.i.Error,s);let a=Error(s);throw this._handshakeRejecter(a),a}return this._logger.log(w.i.Debug,"Server handshake complete."),this._handshakeResolver(),o}_resetKeepAliveInterval(){!this.connection.features.inherentKeepAlive&&(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0===this._pingServerHandle)){let t=this._nextKeepAlive-new Date().getTime();t<0&&(t=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===b.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},t)}}serverTimeout(){this.connection.stop(Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(t){let e=this._methods[t.target.toLowerCase()];if(e){try{e.forEach(e=>e.apply(this,t.arguments))}catch(o){this._logger.log(w.i.Error,`A callback for the method ${t.target.toLowerCase()} threw error '${o}'.`)}if(t.invocationId){let n="Server requested a response, which is not supported in this version of the client.";this._logger.log(w.i.Error,n),this._stopPromise=this._stopInternal(Error(n))}}else this._logger.log(w.i.Warning,`No client method with the name '${t.target}' found.`)}_connectionClosed(t){this._logger.log(w.i.Debug,`HubConnection.connectionClosed(${t}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||t||Error("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(t||Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===b.Disconnecting?this._completeClose(t):this._connectionState===b.Connected&&this._reconnectPolicy?this._reconnect(t):this._connectionState===b.Connected&&this._completeClose(t)}_completeClose(t){if(this._connectionStarted){this._connectionState=b.Disconnected,this._connectionStarted=!1,y.t4.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(e=>e.apply(this,[t]))}catch(e){this._logger.log(w.i.Error,`An onclose callback called with error '${t}' threw error '${e}'.`)}}}async _reconnect(t){let e=Date.now(),o=0,n=void 0!==t?t:Error("Attempting to reconnect due to a unknown error."),r=this._getNextRetryDelay(o++,0,n);if(null===r){this._logger.log(w.i.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(t);return}if(this._connectionState=b.Reconnecting,t?this._logger.log(w.i.Information,`Connection reconnecting because of error '${t}'.`):this._logger.log(w.i.Information,"Connection reconnecting."),0!==this._reconnectingCallbacks.length){try{this._reconnectingCallbacks.forEach(e=>e.apply(this,[t]))}catch(i){this._logger.log(w.i.Error,`An onreconnecting callback called with error '${t}' threw error '${i}'.`)}if(this._connectionState!==b.Reconnecting){this._logger.log(w.i.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;null!==r;){if(this._logger.log(w.i.Information,`Reconnect attempt number ${o} will start in ${r} ms.`),await new Promise(t=>{this._reconnectDelayHandle=setTimeout(t,r)}),this._reconnectDelayHandle=void 0,this._connectionState!==b.Reconnecting){this._logger.log(w.i.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=b.Connected,this._logger.log(w.i.Information,"HubConnection reconnected successfully."),0!==this._reconnectedCallbacks.length)try{this._reconnectedCallbacks.forEach(t=>t.apply(this,[this.connection.connectionId]))}catch(s){this._logger.log(w.i.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${s}'.`)}return}catch(a){if(this._logger.log(w.i.Information,`Reconnect attempt failed because of error '${a}'.`),this._connectionState!==b.Reconnecting){this._logger.log(w.i.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===b.Disconnecting&&this._completeClose();return}n=a instanceof Error?a:Error(a.toString()),r=this._getNextRetryDelay(o++,Date.now()-e,n)}}this._logger.log(w.i.Information,`Reconnect retries have been exhausted after ${Date.now()-e} ms and ${o} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(t,e,o){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:e,previousRetryCount:t,retryReason:o})}catch(n){return this._logger.log(w.i.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${t}, ${e}) threw error '${n}'.`),null}}_cancelCallbacksWithError(t){let e=this._callbacks;this._callbacks={},Object.keys(e).forEach(o=>{let n=e[o];try{n(null,t)}catch(r){this._logger.log(w.i.Error,`Stream 'error' callback called with '${t}' threw error: ${(0,y.HH)(r)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(t,e,o,n){if(o)return 0!==n.length?{arguments:e,streamIds:n,target:t,type:m.Invocation}:{arguments:e,target:t,type:m.Invocation};{let r=this._invocationId;return(this._invocationId++,0!==n.length)?{arguments:e,invocationId:r.toString(),streamIds:n,target:t,type:m.Invocation}:{arguments:e,invocationId:r.toString(),target:t,type:m.Invocation}}}_launchStreams(t,e){if(0!==t.length)for(let o in e||(e=Promise.resolve()),t)t[o].subscribe({complete:()=>{e=e.then(()=>this._sendWithProtocol(this._createCompletionMessage(o)))},error:t=>{let n;n=t instanceof Error?t.message:t&&t.toString?t.toString():"Unknown error",e=e.then(()=>this._sendWithProtocol(this._createCompletionMessage(o,n)))},next:t=>{e=e.then(()=>this._sendWithProtocol(this._createStreamItemMessage(o,t)))}})}_replaceStreamingParams(t){let e=[],o=[];for(let n=0;n<t.length;n++){let r=t[n];if(this._isObservable(r)){let i=this._invocationId;this._invocationId++,e[i]=r,o.push(i.toString()),t.splice(n,1)}}return[e,o]}_isObservable(t){return t&&t.subscribe&&"function"==typeof t.subscribe}_createStreamInvocation(t,e,o){let n=this._invocationId;return(this._invocationId++,0!==o.length)?{arguments:e,invocationId:n.toString(),streamIds:o,target:t,type:m.StreamInvocation}:{arguments:e,invocationId:n.toString(),target:t,type:m.StreamInvocation}}_createCancelInvocation(t){return{invocationId:t,type:m.CancelInvocation}}_createStreamItemMessage(t,e){return{invocationId:t,item:e,type:m.StreamItem}}_createCompletionMessage(t,e,o){return e?{error:e,invocationId:t,type:m.Completion}:{invocationId:t,result:o,type:m.Completion}}}var O=o(4311);class F{constructor(){this.name="json",this.version=1,this.transferFormat=f.Text}parseMessages(t,e){if("string"!=typeof t)throw Error("Invalid input for JSON hub protocol. Expected a string.");if(!t)return[];null===e&&(e=O.W.instance);let o=H.parse(t),n=[];for(let r of o){let i=JSON.parse(r);if("number"!=typeof i.type)throw Error("Invalid payload.");switch(i.type){case m.Invocation:this._isInvocationMessage(i);break;case m.StreamItem:this._isStreamItemMessage(i);break;case m.Completion:this._isCompletionMessage(i);break;case m.Ping:case m.Close:break;default:e.log(w.i.Information,"Unknown message type '"+i.type+"' ignored.");continue}n.push(i)}return n}writeMessage(t){return H.write(JSON.stringify(t))}_isInvocationMessage(t){this._assertNotEmptyString(t.target,"Invalid payload for Invocation message."),void 0!==t.invocationId&&this._assertNotEmptyString(t.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(t){if(this._assertNotEmptyString(t.invocationId,"Invalid payload for StreamItem message."),void 0===t.item)throw Error("Invalid payload for StreamItem message.")}_isCompletionMessage(t){if(t.result&&t.error)throw Error("Invalid payload for Completion message.");!t.result&&t.error&&this._assertNotEmptyString(t.error,"Invalid payload for Completion message."),this._assertNotEmptyString(t.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(t,e){if("string"!=typeof t||""===t)throw Error(e)}}let U={trace:w.i.Trace,debug:w.i.Debug,info:w.i.Information,information:w.i.Information,warn:w.i.Warning,warning:w.i.Warning,error:w.i.Error,critical:w.i.Critical,none:w.i.None};class B{configureLogging(t){var e;if(y.j7.isRequired(t,"logging"),void 0!==(e=t).log)this.logger=t;else if("string"==typeof t){let o=function(t){let e=U[t.toLowerCase()];if(void 0!==e)return e;throw Error(`Unknown log level: ${t}`)}(t);this.logger=new y.kw(o)}else this.logger=new y.kw(t);return this}withUrl(t,e){return y.j7.isRequired(t,"url"),y.j7.isNotEmpty(t,"url"),this.url=t,"object"==typeof e?this.httpConnectionOptions={...this.httpConnectionOptions,...e}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:e},this}withHubProtocol(t){return y.j7.isRequired(t,"protocol"),this.protocol=t,this}withAutomaticReconnect(t){if(this.reconnectPolicy)throw Error("A reconnectPolicy has already been set.");return t?Array.isArray(t)?this.reconnectPolicy=new r(t):this.reconnectPolicy=t:this.reconnectPolicy=new r,this}build(){let t=this.httpConnectionOptions||{};if(void 0===t.logger&&(t.logger=this.logger),!this.url)throw Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");let e=new D(this.url,t);return q.create(e,this.logger||O.W.instance,this.protocol||new F,this.reconnectPolicy)}}},239:function(t,e,o){"use strict";var n,r;o.d(e,{i:function(){return n}}),(r=n||(n={}))[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None"},4311:function(t,e,o){"use strict";o.d(e,{W:function(){return n}});class n{constructor(){}log(t,e){}}n.instance=new n},5403:function(t,e,o){"use strict";o.d(e,{x:function(){return r}});var n=o(7968);class r{constructor(){this.observers=[]}next(t){for(let e of this.observers)e.next(t)}error(t){for(let e of this.observers)e.error&&e.error(t)}complete(){for(let t of this.observers)t.complete&&t.complete()}subscribe(t){return this.observers.push(t),new n.WQ(this,t)}}},7968:function(t,e,o){"use strict";o.d(e,{E9:function(){return f},HH:function(){return _},WQ:function(){return g},bG:function(){return h},eP:function(){return l},hS:function(){return p},hu:function(){return u},j7:function(){return s},kw:function(){return d},o4:function(){return c},t4:function(){return a}});var n=o(239),r=o(4311),i=o(3454);class s{static isRequired(t,e){if(null==t)throw Error(`The '${e}' argument is required.`)}static isNotEmpty(t,e){if(!t||t.match(/^\s*$/))throw Error(`The '${e}' argument should not be empty.`)}static isIn(t,e,o){if(!(t in e))throw Error(`Unknown ${o} value: ${t}.`)}}class a{static get isBrowser(){return"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isReactNative(){return"object"==typeof window&&void 0===window.document}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function c(t,e){let o="";return l(t)?(o=`Binary data of length ${t.byteLength}`,e&&(o+=`. Content: '${function(t){let e=new Uint8Array(t),o="";return e.forEach(t=>{o+=`0x${t<16?"0":""}${t.toString(16)} `}),o.substr(0,o.length-1)}(t)}'`)):"string"==typeof t&&(o=`String data of length ${t.length}`,e&&(o+=`. Content: '${t}'`)),o}function l(t){return t&&"undefined"!=typeof ArrayBuffer&&(t instanceof ArrayBuffer||t.constructor&&"ArrayBuffer"===t.constructor.name)}async function h(t,e,o,r,i,s,a){let h={};if(i){let u=await i();u&&(h={Authorization:`Bearer ${u}`})}let[g,d]=p();h[g]=d,t.log(n.i.Trace,`(${e} transport) sending data. ${c(s,a.logMessageContent)}.`);let _=l(s)?"arraybuffer":"text",f=await o.post(r,{content:s,headers:{...h,...a.headers},responseType:_,timeout:a.timeout,withCredentials:a.withCredentials});t.log(n.i.Trace,`(${e} transport) request complete. Response status: ${f.statusCode}.`)}function u(t){return void 0===t?new d(n.i.Information):null===t?r.W.instance:void 0!==t.log?t:new d(t)}class g{constructor(t,e){this._subject=t,this._observer=e}dispose(){let t=this._subject.observers.indexOf(this._observer);t>-1&&this._subject.observers.splice(t,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class d{constructor(t){this._minLevel=t,this.out=console}log(t,e){if(t>=this._minLevel){let o=`[${new Date().toISOString()}] ${n.i[t]}: ${e}`;switch(t){case n.i.Critical:case n.i.Error:this.out.error(o);break;case n.i.Warning:this.out.warn(o);break;case n.i.Information:this.out.info(o);break;default:this.out.log(o)}}}}function p(){let t="X-SignalR-User-Agent";return a.isNode&&(t="User-Agent"),[t,function(t,e,o,n){let r="Microsoft SignalR/",i=t.split(".");return r+=`${i[0]}.${i[1]}`,r+=` (${t}; `,e&&""!==e?r+=`${e}; `:r+="Unknown OS; ",r+=`${o}`,n?r+=`; ${n}`:r+="; Unknown Runtime Version",r+=")"}("6.0.10",function(){if(!a.isNode)return"";switch(i.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return i.platform}}(),a.isNode?"NodeJS":"Browser",function(){if(a.isNode)return i.versions.node}())]}function _(t){return t.stack?t.stack:t.message?t.message:`${t}`}function f(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==o.g)return o.g;throw Error("could not find global")}},3454:function(t,e,o){"use strict";var n,r;t.exports=(null==(n=o.g.process)?void 0:n.env)&&"object"==typeof(null==(r=o.g.process)?void 0:r.env)?o.g.process:o(7663)},7663:function(t){!function(){var e={229:function(t){var e,o,n,r=t.exports={};function i(){throw Error("setTimeout has not been defined")}function s(){throw Error("clearTimeout has not been defined")}function a(t){if(e===setTimeout)return setTimeout(t,0);if((e===i||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(o){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:i}catch(t){e=i}try{o="function"==typeof clearTimeout?clearTimeout:s}catch(n){o=s}}();var c=[],l=!1,h=-1;function u(){l&&n&&(l=!1,n.length?c=n.concat(c):h=-1,c.length&&g())}function g(){if(!l){var t=a(u);l=!0;for(var e=c.length;e;){for(n=c,c=[];++h<e;)n&&n[h].run();h=-1,e=c.length}n=null,l=!1,function(t){if(o===clearTimeout)return clearTimeout(t);if((o===s||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(t);try{o(t)}catch(n){try{return o.call(null,t)}catch(e){return o.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function p(){}r.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var o=1;o<arguments.length;o++)e[o-1]=arguments[o];c.push(new d(t,e)),1!==c.length||l||a(g)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=p,r.addListener=p,r.once=p,r.off=p,r.removeListener=p,r.removeAllListeners=p,r.emit=p,r.prependListener=p,r.prependOnceListener=p,r.listeners=function(t){return[]},r.binding=function(t){throw Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw Error("process.chdir is not supported")},r.umask=function(){return 0}}},o={};function n(t){var r=o[t];if(void 0!==r)return r.exports;var i=o[t]={exports:{}},s=!0;try{e[t](i,i.exports,n),s=!1}finally{s&&delete o[t]}return i.exports}n.ab="//";var r=n(229);t.exports=r}()},7568:function(t,e,o){"use strict";function n(t,e,o,n,r,i,s){try{var a=t[i](s),c=a.value}catch(l){o(l);return}a.done?e(c):Promise.resolve(c).then(n,r)}function r(t){return function(){var e=this,o=arguments;return new Promise(function(r,i){var s=t.apply(e,o);function a(t){n(s,r,i,a,c,"next",t)}function c(t){n(s,r,i,a,c,"throw",t)}a(void 0)})}}o.d(e,{Z:function(){return r}})},797:function(t,e,o){"use strict";function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,n=Array(e);o<e;o++)n[o]=t[o];return n}function r(t){return function(t){if(Array.isArray(t))return n(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var o=Object.prototype.toString.call(t).slice(8,-1);if("Object"===o&&t.constructor&&(o=t.constructor.name),"Map"===o||"Set"===o)return Array.from(o);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return n(t,e)}}(t)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}o.d(e,{Z:function(){return r}})}}]);