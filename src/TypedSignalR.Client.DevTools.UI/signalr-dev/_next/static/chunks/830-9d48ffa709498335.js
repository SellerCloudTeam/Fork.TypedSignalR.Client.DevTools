(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[830],{7830:function(t,e,o){"use strict";o.d(e,{s:function(){return z}});let n=[0,2e3,1e4,3e4,null];class r{constructor(t){this._retryDelays=void 0!==t?[...t,null]:n}nextRetryDelayInMilliseconds(t){return this._retryDelays[t.previousRetryCount]}}class i{}i.Authorization="Authorization",i.Cookie="Cookie";class s{constructor(t,e,o){this.statusCode=t,this.statusText=e,this.content=o}}class a{get(t,e){return this.send({...e,method:"GET",url:t})}post(t,e){return this.send({...e,method:"POST",url:t})}delete(t,e){return this.send({...e,method:"DELETE",url:t})}getCookieString(t){return""}}class c extends a{constructor(t,e){super(),this._innerClient=t,this._accessTokenFactory=e}async send(t){let e=!0;this._accessTokenFactory&&(!this._accessToken||t.url&&t.url.indexOf("/negotiate?")>0)&&(e=!1,this._accessToken=await this._accessTokenFactory()),this._setAuthorizationHeader(t);let o=await this._innerClient.send(t);return e&&401===o.statusCode&&this._accessTokenFactory?(this._accessToken=await this._accessTokenFactory(),this._setAuthorizationHeader(t),await this._innerClient.send(t)):o}_setAuthorizationHeader(t){t.headers||(t.headers={}),this._accessToken?t.headers[i.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&t.headers[i.Authorization]&&delete t.headers[i.Authorization]}getCookieString(t){return this._innerClient.getCookieString(t)}}class l extends Error{constructor(t,e){let o=new.target.prototype;super(`${t}: Status code '${e}'`),this.statusCode=e,this.__proto__=o}}class h extends Error{constructor(t="A timeout occurred."){let e=new.target.prototype;super(t),this.__proto__=e}}class u extends Error{constructor(t="An abort occurred."){let e=new.target.prototype;super(t),this.__proto__=e}}class g extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.transport=e,this.errorType="UnsupportedTransportError",this.__proto__=o}}class d extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.transport=e,this.errorType="DisabledTransportError",this.__proto__=o}}class p extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.transport=e,this.errorType="FailedToStartTransportError",this.__proto__=o}}class _ extends Error{constructor(t){let e=new.target.prototype;super(t),this.errorType="FailedToNegotiateWithServerError",this.__proto__=e}}class f extends Error{constructor(t,e){let o=new.target.prototype;super(t),this.innerErrors=e,this.__proto__=o}}var m,b,v,w,y,C,S,k,E=o(239),T=o(7968);class I extends a{constructor(t){if(super(),this._logger=t,"undefined"==typeof fetch){let t=require;this._jar=new(t("tough-cookie")).CookieJar,this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind((0,T.E9)());if("undefined"==typeof AbortController){let t=require;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}async send(t){let e,o;if(t.abortSignal&&t.abortSignal.aborted)throw new u;if(!t.method)throw Error("No method defined.");if(!t.url)throw Error("No url defined.");let n=new this._abortControllerType;t.abortSignal&&(t.abortSignal.onabort=()=>{n.abort(),e=new u});let r=null;if(t.timeout){let o=t.timeout;r=setTimeout(()=>{n.abort(),this._logger.log(E.i.Warning,"Timeout from HTTP request."),e=new h},o)}""===t.content&&(t.content=void 0),t.content&&(t.headers=t.headers||{},(0,T.eP)(t.content)?t.headers["Content-Type"]="application/octet-stream":t.headers["Content-Type"]="text/plain;charset=UTF-8");try{o=await this._fetchType(t.url,{body:t.content,cache:"no-cache",credentials:!0===t.withCredentials?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...t.headers},method:t.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(t){if(e)throw e;throw this._logger.log(E.i.Warning,`Error from HTTP request. ${t}.`),t}finally{r&&clearTimeout(r),t.abortSignal&&(t.abortSignal.onabort=null)}if(!o.ok){let t=await P(o,"text");throw new l(t||o.statusText,o.status)}let i=P(o,t.responseType),a=await i;return new s(o.status,o.statusText,a)}getCookieString(t){let e="";return T.t4.isNode&&this._jar&&this._jar.getCookies(t,(t,o)=>e=o.join("; ")),e}}function P(t,e){let o;switch(e){case"arraybuffer":o=t.arrayBuffer();break;case"text":default:o=t.text();break;case"blob":case"document":case"json":throw Error(`${e} is not supported.`)}return o}class $ extends a{constructor(t){super(),this._logger=t}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new u):t.method?t.url?new Promise((e,o)=>{let n=new XMLHttpRequest;n.open(t.method,t.url,!0),n.withCredentials=void 0===t.withCredentials||t.withCredentials,n.setRequestHeader("X-Requested-With","XMLHttpRequest"),""===t.content&&(t.content=void 0),t.content&&((0,T.eP)(t.content)?n.setRequestHeader("Content-Type","application/octet-stream"):n.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));let r=t.headers;r&&Object.keys(r).forEach(t=>{n.setRequestHeader(t,r[t])}),t.responseType&&(n.responseType=t.responseType),t.abortSignal&&(t.abortSignal.onabort=()=>{n.abort(),o(new u)}),t.timeout&&(n.timeout=t.timeout),n.onload=()=>{t.abortSignal&&(t.abortSignal.onabort=null),n.status>=200&&n.status<300?e(new s(n.status,n.statusText,n.response||n.responseText)):o(new l(n.response||n.responseText||n.statusText,n.status))},n.onerror=()=>{this._logger.log(E.i.Warning,`Error from HTTP request. ${n.status}: ${n.statusText}.`),o(new l(n.statusText,n.status))},n.ontimeout=()=>{this._logger.log(E.i.Warning,"Timeout from HTTP request."),o(new h)},n.send(t.content)}):Promise.reject(Error("No url defined.")):Promise.reject(Error("No method defined."))}}class D extends a{constructor(t){if(super(),"undefined"!=typeof fetch||T.t4.isNode)this._httpClient=new I(t);else if("undefined"!=typeof XMLHttpRequest)this._httpClient=new $(t);else throw Error("No usable HttpClient found.")}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new u):t.method?t.url?this._httpClient.send(t):Promise.reject(Error("No url defined.")):Promise.reject(Error("No method defined."))}getCookieString(t){return this._httpClient.getCookieString(t)}}(m=y||(y={}))[m.None=0]="None",m[m.WebSockets=1]="WebSockets",m[m.ServerSentEvents=2]="ServerSentEvents",m[m.LongPolling=4]="LongPolling",(b=C||(C={}))[b.Text=1]="Text",b[b.Binary=2]="Binary";class R{constructor(){this._isAborted=!1,this.onabort=null}abort(){!this._isAborted&&(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class x{constructor(t,e,o){this._httpClient=t,this._logger=e,this._pollAbort=new R,this._options=o,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(t,e){if(T.j7.isRequired(t,"url"),T.j7.isRequired(e,"transferFormat"),T.j7.isIn(e,C,"transferFormat"),this._url=t,this._logger.log(E.i.Trace,"(LongPolling transport) Connecting."),e===C.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof new XMLHttpRequest().responseType)throw Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");let[o,n]=(0,T.hS)(),r={[o]:n,...this._options.headers},i={abortSignal:this._pollAbort.signal,headers:r,timeout:1e5,withCredentials:this._options.withCredentials};e===C.Binary&&(i.responseType="arraybuffer");let s=`${t}&_=${Date.now()}`;this._logger.log(E.i.Trace,`(LongPolling transport) polling: ${s}.`);let a=await this._httpClient.get(s,i);200!==a.statusCode?(this._logger.log(E.i.Error,`(LongPolling transport) Unexpected response code: ${a.statusCode}.`),this._closeError=new l(a.statusText||"",a.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,i)}async _poll(t,e){try{for(;this._running;)try{let o=`${t}&_=${Date.now()}`;this._logger.log(E.i.Trace,`(LongPolling transport) polling: ${o}.`);let n=await this._httpClient.get(o,e);204===n.statusCode?(this._logger.log(E.i.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==n.statusCode?(this._logger.log(E.i.Error,`(LongPolling transport) Unexpected response code: ${n.statusCode}.`),this._closeError=new l(n.statusText||"",n.statusCode),this._running=!1):n.content?(this._logger.log(E.i.Trace,`(LongPolling transport) data received. ${(0,T.o4)(n.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(n.content)):this._logger.log(E.i.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(t){this._running?t instanceof h?this._logger.log(E.i.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=t,this._running=!1):this._logger.log(E.i.Trace,`(LongPolling transport) Poll errored after shutdown: ${t.message}`)}}finally{this._logger.log(E.i.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(t){return this._running?(0,T.bG)(this._logger,"LongPolling",this._httpClient,this._url,t,this._options):Promise.reject(Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(E.i.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(E.i.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);let t={},[e,o]=(0,T.hS)();t[e]=o;let n={headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials};await this._httpClient.delete(this._url,n),this._logger.log(E.i.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(E.i.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let t="(LongPolling transport) Firing onclose event.";this._closeError&&(t+=" Error: "+this._closeError),this._logger.log(E.i.Trace,t),this.onclose(this._closeError)}}}class H{constructor(t,e,o,n){this._httpClient=t,this._accessToken=e,this._logger=o,this._options=n,this.onreceive=null,this.onclose=null}async connect(t,e){return T.j7.isRequired(t,"url"),T.j7.isRequired(e,"transferFormat"),T.j7.isIn(e,C,"transferFormat"),this._logger.log(E.i.Trace,"(SSE transport) Connecting."),this._url=t,this._accessToken&&(t+=(0>t.indexOf("?")?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise((o,n)=>{let r,i=!1;if(e!==C.Text){n(Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}if(T.t4.isBrowser||T.t4.isWebWorker)r=new this._options.EventSource(t,{withCredentials:this._options.withCredentials});else{let e=this._httpClient.getCookieString(t),o={};o.Cookie=e;let[n,i]=(0,T.hS)();o[n]=i,r=new this._options.EventSource(t,{withCredentials:this._options.withCredentials,headers:{...o,...this._options.headers}})}try{r.onmessage=t=>{if(this.onreceive)try{this._logger.log(E.i.Trace,`(SSE transport) data received. ${(0,T.o4)(t.data,this._options.logMessageContent)}.`),this.onreceive(t.data)}catch(t){this._close(t);return}},r.onerror=t=>{i?this._close():n(Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},r.onopen=()=>{this._logger.log(E.i.Information,`SSE connected to ${this._url}`),this._eventSource=r,i=!0,o()}}catch(t){n(t);return}})}async send(t){return this._eventSource?(0,T.bG)(this._logger,"SSE",this._httpClient,this._url,t,this._options):Promise.reject(Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(t){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(t))}}class j{constructor(t,e,o,n,r,i){this._logger=o,this._accessTokenFactory=e,this._logMessageContent=n,this._webSocketConstructor=r,this._httpClient=t,this.onreceive=null,this.onclose=null,this._headers=i}async connect(t,e){let o;return T.j7.isRequired(t,"url"),T.j7.isRequired(e,"transferFormat"),T.j7.isIn(e,C,"transferFormat"),this._logger.log(E.i.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory&&(o=await this._accessTokenFactory()),new Promise((n,r)=>{let s;t=t.replace(/^http/,"ws");let a=this._httpClient.getCookieString(t),c=!1;if(T.t4.isNode||T.t4.isReactNative){let e={},[n,r]=(0,T.hS)();e[n]=r,o&&(e[i.Authorization]=`Bearer ${o}`),a&&(e[i.Cookie]=a),s=new this._webSocketConstructor(t,void 0,{headers:{...e,...this._headers}})}else o&&(t+=(0>t.indexOf("?")?"?":"&")+`access_token=${encodeURIComponent(o)}`);s||(s=new this._webSocketConstructor(t)),e===C.Binary&&(s.binaryType="arraybuffer"),s.onopen=e=>{this._logger.log(E.i.Information,`WebSocket connected to ${t}.`),this._webSocket=s,c=!0,n()},s.onerror=t=>{let e=null;e="undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:"There was an error with the transport",this._logger.log(E.i.Information,`(WebSockets transport) ${e}.`)},s.onmessage=t=>{if(this._logger.log(E.i.Trace,`(WebSockets transport) data received. ${(0,T.o4)(t.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(t.data)}catch(t){this._close(t);return}},s.onclose=t=>{c?this._close(t):r(Error("undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled."))}})}send(t){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(E.i.Trace,`(WebSockets transport) sending data. ${(0,T.o4)(t,this._logMessageContent)}.`),this._webSocket.send(t),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(t){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(E.i.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(t)&&(!1===t.wasClean||1e3!==t.code)?this.onclose(Error(`WebSocket closed with status code: ${t.code} (${t.reason||"no reason given"}).`)):t instanceof Error?this.onclose(t):this.onclose())}_isCloseEvent(t){return t&&"boolean"==typeof t.wasClean&&"number"==typeof t.code}}class W{constructor(t,e={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,T.j7.isRequired(t,"url"),this._logger=(0,T.hu)(e.logger),this.baseUrl=this._resolveUrl(t),(e=e||{}).logMessageContent=void 0!==e.logMessageContent&&e.logMessageContent,"boolean"==typeof e.withCredentials||void 0===e.withCredentials)e.withCredentials=void 0===e.withCredentials||e.withCredentials;else throw Error("withCredentials option was not a 'boolean' or 'undefined' value");e.timeout=void 0===e.timeout?1e5:e.timeout;let o=null,n=null;if(T.t4.isNode){let t=require;o=t("ws"),n=t("eventsource")}T.t4.isNode||"undefined"==typeof WebSocket||e.WebSocket?T.t4.isNode&&!e.WebSocket&&o&&(e.WebSocket=o):e.WebSocket=WebSocket,T.t4.isNode||"undefined"==typeof EventSource||e.EventSource?T.t4.isNode&&!e.EventSource&&void 0!==n&&(e.EventSource=n):e.EventSource=EventSource,this._httpClient=new c(e.httpClient||new D(this._logger),e.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=e,this.onreceive=null,this.onclose=null}async start(t){if(t=t||C.Binary,T.j7.isIn(t,C,"transferFormat"),this._logger.log(E.i.Debug,`Starting connection with transfer format '${C[t]}'.`),"Disconnected"!==this._connectionState)return Promise.reject(Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(t),await this._startInternalPromise,"Disconnecting"===this._connectionState){let t="Failed to start the HttpConnection before stop() was called.";return this._logger.log(E.i.Error,t),await this._stopPromise,Promise.reject(new u(t))}if("Connected"!==this._connectionState){let t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(E.i.Error,t),Promise.reject(new u(t))}this._connectionStarted=!0}send(t){return"Connected"!==this._connectionState?Promise.reject(Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new N(this.transport)),this._sendQueue.send(t))}async stop(t){return"Disconnected"===this._connectionState?(this._logger.log(E.i.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this._connectionState?(this._logger.log(E.i.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):void(this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(t),await this._stopPromise)}async _stopInternal(t){this._stopError=t;try{await this._startInternalPromise}catch(t){}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(E.i.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(E.i.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(t){let e=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation){if(this._options.transport===y.WebSockets)this.transport=this._constructTransport(y.WebSockets),await this._startTransport(e,t);else throw Error("Negotiation can only be skipped when using the WebSocket transport directly.")}else{let o=null,n=0;do{if(o=await this._getNegotiationResponse(e),"Disconnecting"===this._connectionState||"Disconnected"===this._connectionState)throw new u("The connection was stopped during negotiation.");if(o.error)throw Error(o.error);if(o.ProtocolVersion)throw Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(e=o.url),o.accessToken){let t=o.accessToken;this._accessTokenFactory=()=>t,this._httpClient._accessToken=t,this._httpClient._accessTokenFactory=void 0}n++}while(o.url&&n<100);if(100===n&&o.url)throw Error("Negotiate redirection limit exceeded.");await this._createTransport(e,this._options.transport,o,t)}this.transport instanceof x&&(this.features.inherentKeepAlive=!0),"Connecting"===this._connectionState&&(this._logger.log(E.i.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(t){return this._logger.log(E.i.Error,"Failed to start the connection: "+t),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(t)}}async _getNegotiationResponse(t){let e={},[o,n]=(0,T.hS)();e[o]=n;let r=this._resolveNegotiateUrl(t);this._logger.log(E.i.Debug,`Sending negotiation request: ${r}.`);try{let t=await this._httpClient.post(r,{content:"",headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(200!==t.statusCode)return Promise.reject(Error(`Unexpected status code returned from negotiate '${t.statusCode}'`));let o=JSON.parse(t.content);return(!o.negotiateVersion||o.negotiateVersion<1)&&(o.connectionToken=o.connectionId),o}catch(e){let t="Failed to complete negotiation with the server: "+e;return e instanceof l&&404===e.statusCode&&(t+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(E.i.Error,t),Promise.reject(new _(t))}}_createConnectUrl(t,e){return e?t+(-1===t.indexOf("?")?"?":"&")+`id=${e}`:t}async _createTransport(t,e,o,n){let r=this._createConnectUrl(t,o.connectionToken);if(this._isITransport(e)){this._logger.log(E.i.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=e,await this._startTransport(r,n),this.connectionId=o.connectionId;return}let i=[],s=o.availableTransports||[],a=o;for(let o of s){let s=this._resolveTransportOrError(o,e,n);if(s instanceof Error)i.push(`${o.transport} failed:`),i.push(s);else if(this._isITransport(s)){if(this.transport=s,!a){try{a=await this._getNegotiationResponse(t)}catch(t){return Promise.reject(t)}r=this._createConnectUrl(t,a.connectionToken)}try{await this._startTransport(r,n),this.connectionId=a.connectionId;return}catch(t){if(this._logger.log(E.i.Error,`Failed to start the transport '${o.transport}': ${t}`),a=void 0,i.push(new p(`${o.transport} failed: ${t}`,y[o.transport])),"Connecting"!==this._connectionState){let t="Failed to select transport before stop() was called.";return this._logger.log(E.i.Debug,t),Promise.reject(new u(t))}}}}return i.length>0?Promise.reject(new f(`Unable to connect to the server with any of the available transports. ${i.join(" ")}`,i)):Promise.reject(Error("None of the transports supported by the client are supported by the server."))}_constructTransport(t){switch(t){case y.WebSockets:if(!this._options.WebSocket)throw Error("'WebSocket' is not supported in your environment.");return new j(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case y.ServerSentEvents:if(!this._options.EventSource)throw Error("'EventSource' is not supported in your environment.");return new H(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case y.LongPolling:return new x(this._httpClient,this._logger,this._options);default:throw Error(`Unknown transport: ${t}.`)}}_startTransport(t,e){return this.transport.onreceive=this.onreceive,this.transport.onclose=t=>this._stopConnection(t),this.transport.connect(t,e)}_resolveTransportOrError(t,e,o){let n=y[t.transport];if(null==n)return this._logger.log(E.i.Debug,`Skipping transport '${t.transport}' because it is not supported by this client.`),Error(`Skipping transport '${t.transport}' because it is not supported by this client.`);if(e&&(n&e)==0)return this._logger.log(E.i.Debug,`Skipping transport '${y[n]}' because it was disabled by the client.`),new d(`'${y[n]}' is disabled by the client.`,n);{let e=t.transferFormats.map(t=>C[t]);if(!(e.indexOf(o)>=0))return this._logger.log(E.i.Debug,`Skipping transport '${y[n]}' because it does not support the requested transfer format '${C[o]}'.`),Error(`'${y[n]}' does not support ${C[o]}.`);if(n===y.WebSockets&&!this._options.WebSocket||n===y.ServerSentEvents&&!this._options.EventSource)return this._logger.log(E.i.Debug,`Skipping transport '${y[n]}' because it is not supported in your environment.'`),new g(`'${y[n]}' is not supported in your environment.`,n);this._logger.log(E.i.Debug,`Selecting transport '${y[n]}'.`);try{return this._constructTransport(n)}catch(t){return t}}}_isITransport(t){return t&&"object"==typeof t&&"connect"in t}_stopConnection(t){if(this._logger.log(E.i.Debug,`HttpConnection.stopConnection(${t}) called while in state ${this._connectionState}.`),this.transport=void 0,t=this._stopError||t,this._stopError=void 0,"Disconnected"===this._connectionState){this._logger.log(E.i.Debug,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is already in the disconnected state.`);return}if("Connecting"===this._connectionState)throw this._logger.log(E.i.Warning,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is still in the connecting state.`),Error(`HttpConnection.stopConnection(${t}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),t?this._logger.log(E.i.Error,`Connection disconnected with error '${t}'.`):this._logger.log(E.i.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(E.i.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(t)}catch(e){this._logger.log(E.i.Error,`HttpConnection.onclose(${t}) threw error '${e}'.`)}}}_resolveUrl(t){if(0===t.lastIndexOf("https://",0)||0===t.lastIndexOf("http://",0))return t;if(!T.t4.isBrowser)throw Error(`Cannot resolve '${t}'.`);let e=window.document.createElement("a");return e.href=t,this._logger.log(E.i.Information,`Normalizing '${t}' to '${e.href}'.`),e.href}_resolveNegotiateUrl(t){let e=t.indexOf("?"),o=t.substring(0,-1===e?t.length:e);return"/"!==o[o.length-1]&&(o+="/"),-1===(o+="negotiate"+(-1===e?"":t.substring(e))).indexOf("negotiateVersion")&&(o+=(-1===e?"?":"&")+"negotiateVersion="+this._negotiateVersion),o}}class N{constructor(t){this._transport=t,this._buffer=[],this._executing=!0,this._sendBufferedData=new M,this._transportResult=new M,this._sendLoopPromise=this._sendLoop()}send(t){return this._bufferData(t),this._transportResult||(this._transportResult=new M),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(t){if(this._buffer.length&&typeof this._buffer[0]!=typeof t)throw Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof t}`);this._buffer.push(t),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new M;let t=this._transportResult;this._transportResult=void 0;let e="string"==typeof this._buffer[0]?this._buffer.join(""):N._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(e),t.resolve()}catch(e){t.reject(e)}}}static _concatBuffers(t){let e=t.map(t=>t.byteLength).reduce((t,e)=>t+e),o=new Uint8Array(e),n=0;for(let e of t)o.set(new Uint8Array(e),n),n+=e.byteLength;return o.buffer}}class M{constructor(){this.promise=new Promise((t,e)=>([this._resolver,this._rejecter]=[t,e]))}resolve(){this._resolver()}reject(t){this._rejecter(t)}}class A{static write(t){return`${t}${A.RecordSeparator}`}static parse(t){if(t[t.length-1]!==A.RecordSeparator)throw Error("Message is incomplete.");let e=t.split(A.RecordSeparator);return e.pop(),e}}A.RecordSeparatorCode=30,A.RecordSeparator=String.fromCharCode(A.RecordSeparatorCode);class L{writeHandshakeRequest(t){return A.write(JSON.stringify(t))}parseHandshakeResponse(t){let e,o;if((0,T.eP)(t)){let n=new Uint8Array(t),r=n.indexOf(A.RecordSeparatorCode);if(-1===r)throw Error("Message is incomplete.");let i=r+1;e=String.fromCharCode.apply(null,Array.prototype.slice.call(n.slice(0,i))),o=n.byteLength>i?n.slice(i).buffer:null}else{let n=t.indexOf(A.RecordSeparator);if(-1===n)throw Error("Message is incomplete.");let r=n+1;e=t.substring(0,r),o=t.length>r?t.substring(r):null}let n=A.parse(e),r=JSON.parse(n[0]);if(r.type)throw Error("Expected a handshake response from the server.");return[o,r]}}(v=S||(S={}))[v.Invocation=1]="Invocation",v[v.StreamItem=2]="StreamItem",v[v.Completion=3]="Completion",v[v.StreamInvocation=4]="StreamInvocation",v[v.CancelInvocation=5]="CancelInvocation",v[v.Ping=6]="Ping",v[v.Close=7]="Close";var q=o(5403);(w=k||(k={})).Disconnected="Disconnected",w.Connecting="Connecting",w.Connected="Connected",w.Disconnecting="Disconnecting",w.Reconnecting="Reconnecting";class O{constructor(t,e,o,n){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(E.i.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},T.j7.isRequired(t,"connection"),T.j7.isRequired(e,"logger"),T.j7.isRequired(o,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this._logger=e,this._protocol=o,this.connection=t,this._reconnectPolicy=n,this._handshakeProtocol=new L,this.connection.onreceive=t=>this._processIncomingData(t),this.connection.onclose=t=>this._connectionClosed(t),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=k.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:S.Ping})}static create(t,e,o,n){return new O(t,e,o,n)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(t){if(this._connectionState!==k.Disconnected&&this._connectionState!==k.Reconnecting)throw Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!t)throw Error("The HubConnection url must be a valid url.");this.connection.baseUrl=t}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==k.Disconnected)return Promise.reject(Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=k.Connecting,this._logger.log(E.i.Debug,"Starting HubConnection.");try{await this._startInternal(),T.t4.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=k.Connected,this._connectionStarted=!0,this._logger.log(E.i.Debug,"HubConnection connected successfully.")}catch(t){return this._connectionState=k.Disconnected,this._logger.log(E.i.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;let t=new Promise((t,e)=>{this._handshakeResolver=t,this._handshakeRejecter=e});await this.connection.start(this._protocol.transferFormat);try{let e={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(E.i.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(e)),this._logger.log(E.i.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await t,this._stopDuringStartError)throw this._stopDuringStartError;this.connection.features.inherentKeepAlive||await this._sendMessage(this._cachedPingMessage)}catch(t){throw this._logger.log(E.i.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){let t=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await t}catch(t){}}_stopInternal(t){return this._connectionState===k.Disconnected?(this._logger.log(E.i.Debug,`Call to HubConnection.stop(${t}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===k.Disconnecting?(this._logger.log(E.i.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=k.Disconnecting,this._logger.log(E.i.Debug,"Stopping HubConnection."),this._reconnectDelayHandle)?(this._logger.log(E.i.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=t||new u("The connection was stopped before the hub handshake could complete."),this.connection.stop(t))}stream(t,...e){let o;let[n,r]=this._replaceStreamingParams(e),i=this._createStreamInvocation(t,e,r),s=new q.x;return s.cancelCallback=()=>{let t=this._createCancelInvocation(i.invocationId);return delete this._callbacks[i.invocationId],o.then(()=>this._sendWithProtocol(t))},this._callbacks[i.invocationId]=(t,e)=>{if(e){s.error(e);return}t&&(t.type===S.Completion?t.error?s.error(Error(t.error)):s.complete():s.next(t.item))},o=this._sendWithProtocol(i).catch(t=>{s.error(t),delete this._callbacks[i.invocationId]}),this._launchStreams(n,o),s}_sendMessage(t){return this._resetKeepAliveInterval(),this.connection.send(t)}_sendWithProtocol(t){return this._sendMessage(this._protocol.writeMessage(t))}send(t,...e){let[o,n]=this._replaceStreamingParams(e),r=this._sendWithProtocol(this._createInvocation(t,e,!0,n));return this._launchStreams(o,r),r}invoke(t,...e){let[o,n]=this._replaceStreamingParams(e),r=this._createInvocation(t,e,!1,n),i=new Promise((t,e)=>{this._callbacks[r.invocationId]=(o,n)=>{if(n){e(n);return}o&&(o.type===S.Completion?o.error?e(Error(o.error)):t(o.result):e(Error(`Unexpected message type: ${o.type}`)))};let n=this._sendWithProtocol(r).catch(t=>{e(t),delete this._callbacks[r.invocationId]});this._launchStreams(o,n)});return i}on(t,e){t&&e&&(t=t.toLowerCase(),this._methods[t]||(this._methods[t]=[]),-1===this._methods[t].indexOf(e)&&this._methods[t].push(e))}off(t,e){if(!t)return;t=t.toLowerCase();let o=this._methods[t];if(o){if(e){let n=o.indexOf(e);-1!==n&&(o.splice(n,1),0===o.length&&delete this._methods[t])}else delete this._methods[t]}}onclose(t){t&&this._closedCallbacks.push(t)}onreconnecting(t){t&&this._reconnectingCallbacks.push(t)}onreconnected(t){t&&this._reconnectedCallbacks.push(t)}_processIncomingData(t){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(t=this._processHandshakeResponse(t),this._receivedHandshakeResponse=!0),t){let e=this._protocol.parseMessages(t,this._logger);for(let t of e)switch(t.type){case S.Invocation:this._invokeClientMethod(t);break;case S.StreamItem:case S.Completion:{let e=this._callbacks[t.invocationId];if(e){t.type===S.Completion&&delete this._callbacks[t.invocationId];try{e(t)}catch(t){this._logger.log(E.i.Error,`Stream callback threw error: ${(0,T.HH)(t)}`)}}break}case S.Ping:break;case S.Close:{this._logger.log(E.i.Information,"Close message received from server.");let e=t.error?Error("Server returned an error on close: "+t.error):void 0;!0===t.allowReconnect?this.connection.stop(e):this._stopPromise=this._stopInternal(e);break}default:this._logger.log(E.i.Warning,`Invalid message type: ${t.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(t){let e,o;try{[o,e]=this._handshakeProtocol.parseHandshakeResponse(t)}catch(o){let t="Error parsing handshake response: "+o;this._logger.log(E.i.Error,t);let e=Error(t);throw this._handshakeRejecter(e),e}if(e.error){let t="Server returned handshake error: "+e.error;this._logger.log(E.i.Error,t);let o=Error(t);throw this._handshakeRejecter(o),o}return this._logger.log(E.i.Debug,"Server handshake complete."),this._handshakeResolver(),o}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0===this._pingServerHandle)){let t=this._nextKeepAlive-new Date().getTime();t<0&&(t=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===k.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},t)}}serverTimeout(){this.connection.stop(Error("Server timeout elapsed without receiving a message from the server."))}async _invokeClientMethod(t){let e,o,n;let r=t.target.toLowerCase(),i=this._methods[r];if(!i){this._logger.log(E.i.Warning,`No client method with the name '${r}' found.`),t.invocationId&&(this._logger.log(E.i.Warning,`No result given for '${r}' method and invocation ID '${t.invocationId}'.`),await this._sendWithProtocol(this._createCompletionMessage(t.invocationId,"Client didn't provide a result.",null)));return}let s=i.slice(),a=!!t.invocationId;for(let i of s)try{let s=e;e=await i.apply(this,t.arguments),a&&e&&s&&(this._logger.log(E.i.Error,`Multiple results provided for '${r}'. Sending error to server.`),n=this._createCompletionMessage(t.invocationId,"Client provided multiple results.",null)),o=void 0}catch(t){o=t,this._logger.log(E.i.Error,`A callback for the method '${r}' threw error '${t}'.`)}n?await this._sendWithProtocol(n):a?(o?n=this._createCompletionMessage(t.invocationId,`${o}`,null):void 0!==e?n=this._createCompletionMessage(t.invocationId,null,e):(this._logger.log(E.i.Warning,`No result given for '${r}' method and invocation ID '${t.invocationId}'.`),n=this._createCompletionMessage(t.invocationId,"Client didn't provide a result.",null)),await this._sendWithProtocol(n)):e&&this._logger.log(E.i.Error,`Result given for '${r}' method but server is not expecting a result.`)}_connectionClosed(t){this._logger.log(E.i.Debug,`HubConnection.connectionClosed(${t}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||t||new u("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(t||Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===k.Disconnecting?this._completeClose(t):this._connectionState===k.Connected&&this._reconnectPolicy?this._reconnect(t):this._connectionState===k.Connected&&this._completeClose(t)}_completeClose(t){if(this._connectionStarted){this._connectionState=k.Disconnected,this._connectionStarted=!1,T.t4.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(e=>e.apply(this,[t]))}catch(e){this._logger.log(E.i.Error,`An onclose callback called with error '${t}' threw error '${e}'.`)}}}async _reconnect(t){let e=Date.now(),o=0,n=void 0!==t?t:Error("Attempting to reconnect due to a unknown error."),r=this._getNextRetryDelay(o++,0,n);if(null===r){this._logger.log(E.i.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(t);return}if(this._connectionState=k.Reconnecting,t?this._logger.log(E.i.Information,`Connection reconnecting because of error '${t}'.`):this._logger.log(E.i.Information,"Connection reconnecting."),0!==this._reconnectingCallbacks.length){try{this._reconnectingCallbacks.forEach(e=>e.apply(this,[t]))}catch(e){this._logger.log(E.i.Error,`An onreconnecting callback called with error '${t}' threw error '${e}'.`)}if(this._connectionState!==k.Reconnecting){this._logger.log(E.i.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;null!==r;){if(this._logger.log(E.i.Information,`Reconnect attempt number ${o} will start in ${r} ms.`),await new Promise(t=>{this._reconnectDelayHandle=setTimeout(t,r)}),this._reconnectDelayHandle=void 0,this._connectionState!==k.Reconnecting){this._logger.log(E.i.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=k.Connected,this._logger.log(E.i.Information,"HubConnection reconnected successfully."),0!==this._reconnectedCallbacks.length)try{this._reconnectedCallbacks.forEach(t=>t.apply(this,[this.connection.connectionId]))}catch(t){this._logger.log(E.i.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${t}'.`)}return}catch(t){if(this._logger.log(E.i.Information,`Reconnect attempt failed because of error '${t}'.`),this._connectionState!==k.Reconnecting){this._logger.log(E.i.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===k.Disconnecting&&this._completeClose();return}n=t instanceof Error?t:Error(t.toString()),r=this._getNextRetryDelay(o++,Date.now()-e,n)}}this._logger.log(E.i.Information,`Reconnect retries have been exhausted after ${Date.now()-e} ms and ${o} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(t,e,o){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:e,previousRetryCount:t,retryReason:o})}catch(o){return this._logger.log(E.i.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${t}, ${e}) threw error '${o}'.`),null}}_cancelCallbacksWithError(t){let e=this._callbacks;this._callbacks={},Object.keys(e).forEach(o=>{let n=e[o];try{n(null,t)}catch(e){this._logger.log(E.i.Error,`Stream 'error' callback called with '${t}' threw error: ${(0,T.HH)(e)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(t,e,o,n){if(o)return 0!==n.length?{arguments:e,streamIds:n,target:t,type:S.Invocation}:{arguments:e,target:t,type:S.Invocation};{let o=this._invocationId;return(this._invocationId++,0!==n.length)?{arguments:e,invocationId:o.toString(),streamIds:n,target:t,type:S.Invocation}:{arguments:e,invocationId:o.toString(),target:t,type:S.Invocation}}}_launchStreams(t,e){if(0!==t.length)for(let o in e||(e=Promise.resolve()),t)t[o].subscribe({complete:()=>{e=e.then(()=>this._sendWithProtocol(this._createCompletionMessage(o)))},error:t=>{let n;n=t instanceof Error?t.message:t&&t.toString?t.toString():"Unknown error",e=e.then(()=>this._sendWithProtocol(this._createCompletionMessage(o,n)))},next:t=>{e=e.then(()=>this._sendWithProtocol(this._createStreamItemMessage(o,t)))}})}_replaceStreamingParams(t){let e=[],o=[];for(let n=0;n<t.length;n++){let r=t[n];if(this._isObservable(r)){let i=this._invocationId;this._invocationId++,e[i]=r,o.push(i.toString()),t.splice(n,1)}}return[e,o]}_isObservable(t){return t&&t.subscribe&&"function"==typeof t.subscribe}_createStreamInvocation(t,e,o){let n=this._invocationId;return(this._invocationId++,0!==o.length)?{arguments:e,invocationId:n.toString(),streamIds:o,target:t,type:S.StreamInvocation}:{arguments:e,invocationId:n.toString(),target:t,type:S.StreamInvocation}}_createCancelInvocation(t){return{invocationId:t,type:S.CancelInvocation}}_createStreamItemMessage(t,e){return{invocationId:t,item:e,type:S.StreamItem}}_createCompletionMessage(t,e,o){return e?{error:e,invocationId:t,type:S.Completion}:{invocationId:t,result:o,type:S.Completion}}}var U=o(4311);class F{constructor(){this.name="json",this.version=1,this.transferFormat=C.Text}parseMessages(t,e){if("string"!=typeof t)throw Error("Invalid input for JSON hub protocol. Expected a string.");if(!t)return[];null===e&&(e=U.W.instance);let o=A.parse(t),n=[];for(let t of o){let o=JSON.parse(t);if("number"!=typeof o.type)throw Error("Invalid payload.");switch(o.type){case S.Invocation:this._isInvocationMessage(o);break;case S.StreamItem:this._isStreamItemMessage(o);break;case S.Completion:this._isCompletionMessage(o);break;case S.Ping:case S.Close:break;default:e.log(E.i.Information,"Unknown message type '"+o.type+"' ignored.");continue}n.push(o)}return n}writeMessage(t){return A.write(JSON.stringify(t))}_isInvocationMessage(t){this._assertNotEmptyString(t.target,"Invalid payload for Invocation message."),void 0!==t.invocationId&&this._assertNotEmptyString(t.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(t){if(this._assertNotEmptyString(t.invocationId,"Invalid payload for StreamItem message."),void 0===t.item)throw Error("Invalid payload for StreamItem message.")}_isCompletionMessage(t){if(t.result&&t.error)throw Error("Invalid payload for Completion message.");!t.result&&t.error&&this._assertNotEmptyString(t.error,"Invalid payload for Completion message."),this._assertNotEmptyString(t.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(t,e){if("string"!=typeof t||""===t)throw Error(e)}}let B={trace:E.i.Trace,debug:E.i.Debug,info:E.i.Information,information:E.i.Information,warn:E.i.Warning,warning:E.i.Warning,error:E.i.Error,critical:E.i.Critical,none:E.i.None};class z{configureLogging(t){if(T.j7.isRequired(t,"logging"),void 0!==t.log)this.logger=t;else if("string"==typeof t){let e=function(t){let e=B[t.toLowerCase()];if(void 0!==e)return e;throw Error(`Unknown log level: ${t}`)}(t);this.logger=new T.kw(e)}else this.logger=new T.kw(t);return this}withUrl(t,e){return T.j7.isRequired(t,"url"),T.j7.isNotEmpty(t,"url"),this.url=t,"object"==typeof e?this.httpConnectionOptions={...this.httpConnectionOptions,...e}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:e},this}withHubProtocol(t){return T.j7.isRequired(t,"protocol"),this.protocol=t,this}withAutomaticReconnect(t){if(this.reconnectPolicy)throw Error("A reconnectPolicy has already been set.");return t?Array.isArray(t)?this.reconnectPolicy=new r(t):this.reconnectPolicy=t:this.reconnectPolicy=new r,this}build(){let t=this.httpConnectionOptions||{};if(void 0===t.logger&&(t.logger=this.logger),!this.url)throw Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");let e=new W(this.url,t);return O.create(e,this.logger||U.W.instance,this.protocol||new F,this.reconnectPolicy)}}},239:function(t,e,o){"use strict";var n,r;o.d(e,{i:function(){return n}}),(r=n||(n={}))[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None"},4311:function(t,e,o){"use strict";o.d(e,{W:function(){return n}});class n{constructor(){}log(t,e){}}n.instance=new n},5403:function(t,e,o){"use strict";o.d(e,{x:function(){return r}});var n=o(7968);class r{constructor(){this.observers=[]}next(t){for(let e of this.observers)e.next(t)}error(t){for(let e of this.observers)e.error&&e.error(t)}complete(){for(let t of this.observers)t.complete&&t.complete()}subscribe(t){return this.observers.push(t),new n.WQ(this,t)}}},7968:function(t,e,o){"use strict";o.d(e,{E9:function(){return f},HH:function(){return _},WQ:function(){return g},bG:function(){return h},eP:function(){return l},hS:function(){return p},hu:function(){return u},j7:function(){return s},kw:function(){return d},o4:function(){return c},t4:function(){return a}});var n=o(239),r=o(4311),i=o(3454);class s{static isRequired(t,e){if(null==t)throw Error(`The '${e}' argument is required.`)}static isNotEmpty(t,e){if(!t||t.match(/^\s*$/))throw Error(`The '${e}' argument should not be empty.`)}static isIn(t,e,o){if(!(t in e))throw Error(`Unknown ${o} value: ${t}.`)}}class a{static get isBrowser(){return"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isReactNative(){return"object"==typeof window&&void 0===window.document}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function c(t,e){let o="";return l(t)?(o=`Binary data of length ${t.byteLength}`,e&&(o+=`. Content: '${function(t){let e=new Uint8Array(t),o="";return e.forEach(t=>{o+=`0x${t<16?"0":""}${t.toString(16)} `}),o.substr(0,o.length-1)}(t)}'`)):"string"==typeof t&&(o=`String data of length ${t.length}`,e&&(o+=`. Content: '${t}'`)),o}function l(t){return t&&"undefined"!=typeof ArrayBuffer&&(t instanceof ArrayBuffer||t.constructor&&"ArrayBuffer"===t.constructor.name)}async function h(t,e,o,r,i,s){let a={},[h,u]=p();a[h]=u,t.log(n.i.Trace,`(${e} transport) sending data. ${c(i,s.logMessageContent)}.`);let g=l(i)?"arraybuffer":"text",d=await o.post(r,{content:i,headers:{...a,...s.headers},responseType:g,timeout:s.timeout,withCredentials:s.withCredentials});t.log(n.i.Trace,`(${e} transport) request complete. Response status: ${d.statusCode}.`)}function u(t){return void 0===t?new d(n.i.Information):null===t?r.W.instance:void 0!==t.log?t:new d(t)}class g{constructor(t,e){this._subject=t,this._observer=e}dispose(){let t=this._subject.observers.indexOf(this._observer);t>-1&&this._subject.observers.splice(t,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class d{constructor(t){this._minLevel=t,this.out=console}log(t,e){if(t>=this._minLevel){let o=`[${new Date().toISOString()}] ${n.i[t]}: ${e}`;switch(t){case n.i.Critical:case n.i.Error:this.out.error(o);break;case n.i.Warning:this.out.warn(o);break;case n.i.Information:this.out.info(o);break;default:this.out.log(o)}}}}function p(){let t="X-SignalR-User-Agent";return a.isNode&&(t="User-Agent"),[t,function(t,e,o,n){let r="Microsoft SignalR/",i=t.split(".");return r+=`${i[0]}.${i[1]} (${t}; `,e&&""!==e?r+=`${e}; `:r+="Unknown OS; ",r+=`${o}`,n?r+=`; ${n}`:r+="; Unknown Runtime Version",r+=")"}("7.0.3",function(){if(!a.isNode)return"";switch(i.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return i.platform}}(),a.isNode?"NodeJS":"Browser",function(){if(a.isNode)return i.versions.node}())]}function _(t){return t.stack?t.stack:t.message?t.message:`${t}`}function f(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==o.g)return o.g;throw Error("could not find global")}},3454:function(t,e,o){"use strict";var n,r;t.exports=(null==(n=o.g.process)?void 0:n.env)&&"object"==typeof(null==(r=o.g.process)?void 0:r.env)?o.g.process:o(7663)},7663:function(t){!function(){var e={229:function(t){var e,o,n,r=t.exports={};function i(){throw Error("setTimeout has not been defined")}function s(){throw Error("clearTimeout has not been defined")}function a(t){if(e===setTimeout)return setTimeout(t,0);if((e===i||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(o){try{return e.call(null,t,0)}catch(o){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:i}catch(t){e=i}try{o="function"==typeof clearTimeout?clearTimeout:s}catch(t){o=s}}();var c=[],l=!1,h=-1;function u(){l&&n&&(l=!1,n.length?c=n.concat(c):h=-1,c.length&&g())}function g(){if(!l){var t=a(u);l=!0;for(var e=c.length;e;){for(n=c,c=[];++h<e;)n&&n[h].run();h=-1,e=c.length}n=null,l=!1,function(t){if(o===clearTimeout)return clearTimeout(t);if((o===s||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(t);try{o(t)}catch(e){try{return o.call(null,t)}catch(e){return o.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function p(){}r.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var o=1;o<arguments.length;o++)e[o-1]=arguments[o];c.push(new d(t,e)),1!==c.length||l||a(g)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=p,r.addListener=p,r.once=p,r.off=p,r.removeListener=p,r.removeAllListeners=p,r.emit=p,r.prependListener=p,r.prependOnceListener=p,r.listeners=function(t){return[]},r.binding=function(t){throw Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw Error("process.chdir is not supported")},r.umask=function(){return 0}}},o={};function n(t){var r=o[t];if(void 0!==r)return r.exports;var i=o[t]={exports:{}},s=!0;try{e[t](i,i.exports,n),s=!1}finally{s&&delete o[t]}return i.exports}n.ab="//";var r=n(229);t.exports=r}()}}]);